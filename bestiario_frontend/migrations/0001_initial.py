# Generated by Django 4.0.5 on 2022-06-07 19:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('campanha', models.CharField(max_length=256)),
                ('email', models.CharField(max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuario',
            },
        ),
        migrations.CreateModel(
            name='Criatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=100, unique=True)),
                ('atributos', models.TextField()),
                ('status_combate', models.CharField(max_length=1024)),
                ('tamanho', models.CharField(max_length=1024)),
                ('conhecimento', models.CharField(max_length=1024)),
                ('alinhamento', models.CharField(max_length=1024)),
                ('resistencia', models.CharField(max_length=1024)),
                ('acoes', models.TextField()),
                ('magias', models.TextField()),
            ],
            options={
                'db_table': 'criatura',
            },
        ),
        migrations.CreateModel(
            name='Personagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(max_length=1024)),
                ('armas', models.TextField()),
                ('talento', models.CharField(max_length=1024)),
                ('mochila', models.TextField()),
                ('classe', models.CharField(max_length=1024)),
                ('nickname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestiario_frontend.criatura')),
                ('nome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'personagem',
            },
        ),
        migrations.CreateModel(
            name='Monstro',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem_url', models.TextField(max_length=2048)),
                ('tipo', models.CharField(max_length=256)),
                ('nivel_dificuldade', models.CharField(max_length=256)),
                ('vida_max', models.IntegerField()),
                ('vida_min', models.IntegerField()),
                ('nickname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bestiario_frontend.criatura')),
            ],
            options={
                'db_table': 'monstro',
            },
        ),
    ]
